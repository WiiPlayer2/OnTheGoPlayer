<UserControl
    x:Class="OnTheGoPlayer.Views.Controls.PlayerControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:bl="clr-namespace:OnTheGoPlayer.Bl"
    xmlns:conv="clr-namespace:OnTheGoPlayer.Helpers.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ev="clr-namespace:Singulink.Windows.Data"
    xmlns:local="clr-namespace:OnTheGoPlayer.Views.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:vm="clr-namespace:OnTheGoPlayer.ViewModels"
    d:DataContext="{d:DesignInstance Type=vm:PlayerControlViewModel}"
    d:DesignHeight="100"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
            <Setter Property="Height" Value="50" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Width" Value="50" />
        </Style>
        <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="ToggleButton">
            <Setter Property="Height" Value="50" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Width" Value="50" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition MinWidth="50" MaxWidth="100" />
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal">
            <Button Command="{Binding PreviousCommand}" Content="Prev" />
            <Button Command="{Binding PlayCommand}" Content="Play">
                <Button.Style>
                    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentState}" Value="{x:Static bl:PlayerState.Playing}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Command="{Binding PauseCommand}" Content="Pause">
                <Button.Style>
                    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentState}" Value="{x:Static bl:PlayerState.Playing}">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Command="{Binding NextCommand}" Content="Next" />
        </StackPanel>
        <Slider
            Grid.Column="1"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            IsMoveToPointEnabled="True"
            Maximum="1"
            Minimum="0"
            Orientation="Horizontal"
            Value="{Binding Volume}" />
        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <metro:ProgressRing
                    Width="10"
                    Height="10"
                    Visibility="{Binding Player.IsLoading, Converter={conv:BooleanToVisibilityConverter}}" />
                <TextBlock Margin="5" VerticalAlignment="Center">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} - {1} ({2})">
                            <Binding Path="CurrentSong.Title" />
                            <Binding Path="CurrentSong.Artist" />
                            <Binding Path="CurrentSong.Album" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StackPanel>

            <DockPanel Grid.Row="1" Margin="5">
                <TextBlock
                    VerticalAlignment="Center"
                    DockPanel.Dock="Left"
                    Text="{Binding Position, StringFormat=h\\:mm\\:ss}" />
                <TextBlock
                    VerticalAlignment="Center"
                    DockPanel.Dock="Right"
                    Text="{Binding Length, StringFormat=h\\:mm\\:ss}" />
                <Slider
                    Margin="5,0"
                    VerticalAlignment="Center"
                    IsMoveToPointEnabled="True"
                    Maximum="{Binding Length, Converter={conv:TimespanToDoubleConverter}}"
                    Minimum="0"
                    Value="{Binding Position, Converter={conv:TimespanToDoubleConverter}}" />
            </DockPanel>
        </Grid>
        <StackPanel Grid.Column="3" Orientation="Horizontal">
            <ToggleButton
                Command="{Binding RepeatCycleCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                Content="Repeat" />
            <ToggleButton Content="Shuffle" IsChecked="{Binding IsShuffleEnabled}" />
        </StackPanel>
    </Grid>
</UserControl>